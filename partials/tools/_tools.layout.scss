// @file
// partials/tools/_tools.layout.scss


@function shila-side-spacing($breakpoint: null) {
  @if $breakpoint {
    @if map-has_key($shila-side-spacings, $breakpoint) {
      @return map-get($shila-side-spacings, $breakpoint);
    }
  }
  @return map-get($shila-side-spacings, 'default');
}

@mixin shila-side-margins($margin) {
  margin-left: $margin;
  margin-right: $margin;
}

@mixin shila-responsive-side-margins {
  @each $breakpoint, $side-spacing in $shila-side-spacings {
    @if $breakpoint == 'default' {
      @include shila-side-margins(shila-side-spacing($breakpoint));
    }
    @else {
      @include breakpoint(shila-breakpoint($breakpoint)) {
        @include shila-side-margins(shila-side-spacing($breakpoint));
      }
    }
  }
}

@mixin shila-outer-container($max-width: $shila-max-page-width) {
  max-width: $max-width;
  @include shila-side-margins(auto);
}

@mixin shila-multicol-layout($columns: null, $column-gap: null, $row-gap: null) {
  @if $columns {
    display: grid;
    grid-template-columns: repeat(#{$columns}, 1fr);
  }
  @if $column-gap {
    grid-column-gap: $column-gap;
  }
  @if $row-gap {
    grid-row-gap: $row-gap;
  }
}

@mixin shila-multicol-breakpoint-layout(
  $columns: ('default': 1, 's': 2, 'm': 3, 'l': 4),
  $column-gaps: ('s': $shila-base-spacing),
  $row-gaps: ()
) {
  @each $breakpoint in join('default', map-keys($shila-breakpoints)) {
    @if map-has-key($columns, $breakpoint)
      or map-has-key($column-gaps, $breakpoint)
      or map-has-key($row-gaps, $breakpoint)
    {
      @if $breakpoint == 'default' {
        @include shila-multicol-layout(
          map-get($columns, $breakpoint),
          map-get($column-gaps, $breakpoint),
          map-get($row-gaps, $breakpoint)
        );
      }
      @else {
        @include breakpoint(shila-breakpoint($breakpoint)) {
          @include shila-multicol-layout(
            map-get($columns, $breakpoint),
            map-get($column-gaps, $breakpoint),
            map-get($row-gaps, $breakpoint)
          );
        }
      }
    }
  }
}
