// @file
// partials/tools/_tools.core.scss
//
// These functions can be used for settings.


@function shila-px-to-rem($px, $breakpoint: 'default') {
  @if map-has-key($shila-base-font-sizes, $breakpoint) {
    @return ($px / map-get($shila-base-font-sizes, $breakpoint)) * 1rem;
  }
  @else {
    @return ($px / map-get($shila-base-font-sizes, 'default')) * 1rem;
  }
}

// Returns a unitless line height based on the provided values
@function shila-line-height($px, $breakpoint: 'default', $map: $shila-base-font-sizes) {
  $line-height: map-get($map, 'default');
  @if map-has_key($map, $breakpoint) {
    $line-height: map-get($map, $breakpoint);
  }
  @if (unit($line-height) == 'px') {
    @return $px / $line-height;
  }
  @else if (unit($line-height) == 'rem') {
    @return shila-px-to-rem($px, $breakpoint) / $line-height;
  }
  @else {
    @error 'Map values need to be in px or rem';
  }
}

@function shila-breakpoint($breakpoint-key) {
  @return map-get($shila-breakpoints, $breakpoint-key);
}

/// Checks for a valid CSS color.
///
/// @argument {string} $color
///
/// @return {boolean}
///
/// @access private

@function _shila-is-color($color) {
  @return (type-of($color) == color) or ($color == "currentColor");
}

/// Mixes a color with black.
///
/// @argument {color} $color
///
/// @argument {number (percentage)} $percent
///   The amount of black to be mixed in.
///
/// @return {color}
///
/// @example scss
///   .element {
///     background-color: shila-shade(#ffbb52, 60%);
///   }
///
///   // CSS Output
///   .element {
///     background-color: #664a20;
///   }

@function shila-shade(
  $color,
  $percent
) {
  @if not _shila-is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
           "the `shade` mixin.";
  } @else {
    @return mix(#000, $color, $percent);
  }
}

/// Mixes a color with white.
///
/// @argument {color} $color
///
/// @argument {number (percentage)} $percent
///   The amount of white to be mixed in.
///
/// @return {color}
///
/// @example scss
///   .element {
///     background-color: tint(#6ecaa6, 40%);
///   }
///
///   // CSS Output
///   .element {
///     background-color: #a8dfc9;
///   }

@function shila-tint(
  $color,
  $percent
) {
  @if not _shila-is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
           "the `tint` mixin.";
  } @else {
    @return mix(#fff, $color, $percent);
  }
}
