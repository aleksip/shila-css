/**
 * @file
 * partials/tools/_tools.font-size.scss
 */

// Calculate a unitless line height for the given font size.
@function shila-line-height($font-size, $breakpoint-key: null) {
  @return ceil($font-size / shila-pixel-line-height($breakpoint-key)) * (shila-pixel-line-height($breakpoint-key) / $font-size);
}

// Generate a font-size and baseline-compatible line-height.
@mixin shila-font-size($font-size, $breakpoint-key: null, $line-height: auto, $important: false) {

  @if (type-of($font-size) == number) {
    @if (unit($font-size) != "px") {
      @error "`#{$font-size}` needs to be a pixel value.";
    }
  } @else {
    @error "`#{$font-size}` needs to be a number.";
  }

  @if ($important == true) {
    $important: !important;
  } @elseif ($important == false) {
    $important: null;
  } @else {
    @error "`#{$important}` needs to be `true` or `false`."
  }

  // We provide a `px` fallback for old IEs not supporting `rem` values.
  font-size: $font-size $important;
  font-size: ($font-size / shila-base-font-size($breakpoint-key)) * 1rem $important;

  @if ($line-height == 'auto') {
    line-height: shila-line-height($font-size, $breakpoint-key) $important;
  }

  @else {

    @if (type-of($line-height) == number or $line-height == 'inherit' or $line-height == 'normal') {
      line-height: $line-height $important;
    }

    @elseif ($line-height != 'none' and $line-height != false) {
      @error "Dâ€™oh! `#{$line-height}` is not a valid value for `$line-height`."
    }

  }

}

@mixin shila-breakpoint-font-sizes($base-font-size, $breakpoint-font-sizes: (), $line-height: auto, $important: false) {
  @include shila-font-size($base-font-size, null, $line-height, $important);
  $last-font-size: $base-font-size;
  @each $breakpoint-key, $base-font-size in $shila-breakpoint-font-sizes {
    @if (map-has-key($breakpoint-font-sizes, $breakpoint-key)) {
      $last-font-size: map-get($breakpoint-font-sizes, $breakpoint-key);
    }
    @include breakpoint(shila-breakpoint($breakpoint-key)) {
      @include shila-font-size($last-font-size, $breakpoint-key, $line-height, $important);
    }
  }
}
